{
    "$schema": "https://keyfactor.github.io/v2/integration-manifest-schema.json",
    "integration_type": "orchestrator",
    "name": "Azure Key Vault Orchestrator",
    "status": "production",
    "update_catalog": true,
    "link_github": true,
    "release_dir": "AzureKeyVault\\bin\\Release",
    "support_level": "kf-supported",
    "description": "The <Orchestrator Name> Universal Orchestrator extension enables remote management of cryptographic certificates in various environments by performing tasks such as inventory, addition, and removal of certificates, and discovery of new certificate stores.",
    "about": {
        "orchestrator": {
            "UOFramework": "10.1",
            "keyfactor_platform_version": "10.0",
            "pam_support": true,
            "store_types": [
                {
                    "BlueprintAllowed": false,
                    "Capability": "AKV",
                    "CustomAliasAllowed": "Optional",
                    "EntryParameters": [],
                    "JobProperties": [],
                    "LocalStore": false,
                    "Name": "Azure Keyvault",
                    "PasswordOptions": {
                        "EntrySupported": false,
                        "StoreRequired": false,
                        "Style": "Default"
                    },
                    "PowerShell": false,
                    "PrivateKeyAllowed": "Optional",
                    "Properties": [],
                    "ServerRequired": true,
                    "ShortName": "AKV",
                    "StorePathType": "",
                    "StorePathValue": "",
                    "SupportedOperations": {
                        "Add": true,
                        "Create": true,
                        "Discovery": true,
                        "Enrollment": false,
                        "Remove": true
                    },
                    "ClientMachineDescription": "The GUID of the tenant ID of the Azure Keyvault instance; for example, '12345678-1234-1234-1234-123456789abc'.",
                    "StorePathDescription": "A string formatted as '{subscription id}:{resource group name}:{vault name}'; for example, '12345678-1234-1234-1234-123456789abc:myResourceGroup:myVault'."
                }
            ]
        }
    }
}